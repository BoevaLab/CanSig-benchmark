rule preprocessing:
    input: cfg.get_data_path,
    output: cfg.ROOT / "data/preprocessed/{scenario}.h5ad"
    log: cfg.ROOT / "logs/preprocessing/{scenario}.txt"
    threads: 4
    params:
            excluded_samples=cfg.get_excluded_samples,
            min_genes=cfg.get_min_genes,
            max_pct_mt=cfg.get_max_pct_mt
    resources:
        mem_mb=16000
    shell:
        """python scripts/preprocessing/preprocessing.py -i {input} -o {output} --excluded-sample {params.excluded_samples} --min-genes {params.min_genes} --max-pct-mt {params.max_pct_mt} &> {log}"""

rule subsample:
    input: rules.preprocessing.output
    output: temp(cfg.ROOT / "data/preprocessed/{scenario}_{n_samples}_{random_seed}.h5ad")
    log: cfg.ROOT / "logs/preprocessing/subsample_{scenario}_{n_samples}_{random_seed}.txt"
    shell:
        """python scripts/preprocessing/subsample.py -i {input} -o {output} --n-samples {wildcards.n_samples} --random-seed {wildcards.random_seed} &> {log}"""


rule convert_h5ad_to_rds:
    input: rules.subsample.output
    output: cfg.ROOT / "data/preprocessed/{scenario}_{n_samples}_{random_seed}.rds"
    log: cfg.ROOT / "logs/convert_h5ad_to_rds/{scenario}_{n_samples}_{random_seed}.txt"
    threads: 4
    resources:
        mem_mb=8000
    conda: "CanSig-R"
    shell:
        "Rscript scripts/preprocessing/convert_h5ad_to_rds.R -i {input} -o {output} &> {log}"