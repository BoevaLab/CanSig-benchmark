rule genenmf_integration:
    input: rules.convert_h5ad_to_rds.output
    output: cfg.ROOT / "integration/genenmf/{scenario}_{n_samples}_{random_seed}/tumour_program.rds"
    benchmark:
        cfg.ROOT /  "benchmarks/{scenario}_{n_samples}_{random_seed}/genenmf/integration.txt"
    threads: 4
    resources:
        slurm_partition="compute",
        mem_mb=8000,
        slurm_extra=""
    log:
        cfg.ROOT / "logs/integration/{scenario}_{n_samples}_{random_seed}/genenmf/integration.txt"
    conda: "CanSig-R"
    shell:
        """Rscript scripts/metasigs/genenmf/get_tumour_programs.R -i {input} -o {output} &> {log}"""

rule genenmf:
    input: rules.genenmf_integration.output
    output: cfg.ROOT / "metasigs/genenmf/{scenario}_{n_samples}_{random_seed}/{cluster}/metasigs.csv"
    log: cfg.ROOT / "logs/meta_sigs/{scenario}_{n_samples}_{random_seed}/genenmf/{cluster}.txt"
    threads: 3
    benchmark:
         cfg.ROOT / "benchmarks/{scenario}_{n_samples}_{random_seed}/genenmf/{cluster}.txt"
    conda: "CanSig-R"
    shell:
        """Rscript scripts/metasigs/genenmf/genenmf.R -i {input} -o {output} -n {wildcards.cluster} &> {log}"""